练习 1.1: 查阅你使用的编译器的文档，确定它所使用的文件命名约定。编译并运行第２页的main程序。
  答：我使用的编译器是GCC 4.8.2,官方文档可以在gcc.gnu.org/onlinedocs中查阅。

练习 1.2:改写程序，让它返回-1。返回值-1通常被当做程序错误的标识。重新编译运行你的程序，观察你的系统如何处理main返回的错误标识。
  答：使用g++ xx.cpp编译程序的时候没有什么特殊提示，和返回0没什么区别。此处问题所说的“如何处理”肯定不是这个意思，我理解有误，以后再回过头来看看。

练习 1.3:编写程序,在标准输出上打印Hello,World.
 
#include<iostream>
int main()
{
 std::cout << "Hello,World" << std::endl;
 return 0;
}

练习1.4:我们的程序使用加法运算符+来将两个数相加。编写程序使用乘法运算符*，来打印两个数的积。

#include<iostream>
int main()
{
 std::cout << "Enter two numbers:" << std::endl;
 int v1 = 0,v2 = 0;
 std::cin >> v1 >> v2;
 std::cout << "The product of" << v1 << " and " << v2
	   << " is " << v1 * v2 << std::endl;
return 0;
}

练习1.5:我们将所以输出操作放在一条很长的语句中。重写程序，将每个运算对象的打印操作放在一条独立的语句中。

#include<iostream>
int main()
{
 std::cout << "Enter two numbers:";
 std::cout << std::endl;
 int v1 = 0,v2 = 0;
 std::cin >> v1 >> v2;
 std::cout << "The sum of ";
 std::cout << v1;
 std::cout << " and ";
 std::cout << v2;
 std::cout << " is ";
 std::cout << v1 * v2;
 std::cout << std::endl;
 return 0;
}

练习1.6:解释下面程序设计片段是否合法。
 std::cout << "The sum of " << v1;
	   << " and " << v2;
	   << " is " << v1 + v2 << std:: endl;
如果程序是合法的，它输出什么？如果程序不合法，原因何在？应该如何修正？
答：不合法。<<运算符接受两个运算对象：左侧的运算对象必须是一个ostream对象，右侧的运算对象是要打印的值。后两行均缺少左侧运算对象。两种修改方案，第一种如书中的示例；第二种在后两行开头分别加上std::cout

